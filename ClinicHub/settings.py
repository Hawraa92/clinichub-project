"""
Django settings for ClinicHub project.
Generated by 'django-admin startproject' using Django 5.2.1.
"""

from pathlib import Path
import os
from django.contrib.messages import constants as messages
from decouple import config
import dj_database_url

# ---------------------------
# Paths
# ---------------------------
BASE_DIR = Path(__file__).resolve().parent.parent

# ---------------------------
# Core / Debug
# ---------------------------
# من .env:
# SECRET_KEY=...
# DEBUG=True/False
# ALLOWED_HOSTS=clinichub.onrender.com,127.0.0.1,localhost
SECRET_KEY = config("SECRET_KEY")
DEBUG = config("DEBUG", default="True").lower() in ("true", "1", "yes")

if DEBUG:
    ALLOWED_HOSTS = ["*"]
else:
    ALLOWED_HOSTS = [h.strip() for h in config("ALLOWED_HOSTS", default="").split(",") if h.strip()]

# ---------------------------
# Public Base URL (for absolute links: WhatsApp, emails, etc.)
# ---------------------------
SITE_URL = config("SITE_URL", default="https://clinichub.onrender.com").rstrip("/")

# ---------------------------
# Installed Apps
# ---------------------------
INSTALLED_APPS = [
    "jazzmin",

    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",

    "widget_tweaks",
    "django_crontab",

    # Local apps
    "doctor",
    "patient",
    "accounts",
    "medical_archive",
    "home",
    "appointments",
    "prescription",
]

# ---------------------------
# Middleware
# ---------------------------
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",  # لخدمة الملفات الثابتة
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# ---------------------------
# URLs / WSGI
# ---------------------------
ROOT_URLCONF = "ClinicHub.urls"
WSGI_APPLICATION = "ClinicHub.wsgi.application"

# ---------------------------
# Templates
# ---------------------------
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",   # مفيد أثناء التطوير
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# ---------------------------
# Database
# ---------------------------
if DEBUG:
    # Local development (PostgreSQL)
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": config("DB_NAME"),
            "USER": config("DB_USER"),
            "PASSWORD": config("DB_PASSWORD"),
            "HOST": config("DB_HOST", default="localhost"),
            "PORT": config("DB_PORT", default="5432"),
        }
    }
else:
    # Production (Render): DATABASE_URL من المتغيّرات
    DATABASES = {
        "default": dj_database_url.config(conn_max_age=600, ssl_require=True)
    }

# ---------------------------
# Password validation
# ---------------------------
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator", "OPTIONS": {"min_length": 8}},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# ---------------------------
# I18N / TZ
# ---------------------------
LANGUAGE_CODE = "en-us"         # غيّري إلى "ar" لو واجهة عربية
TIME_ZONE = "Asia/Baghdad"
USE_I18N = True
USE_TZ = True  # تخزين UTC وعرض حسب التايمزون

# ---------------------------
# Static / Media (WhiteNoise)
# ---------------------------
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

# في الإنتاج نستخدم Manifest، وفي التطوير نستخدم Compressed فقط لتفادي أخطاء collectstatic
if DEBUG:
    STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"
else:
    STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# ---------------------------
# Auth
# ---------------------------
AUTH_USER_MODEL = "accounts.User"
LOGIN_URL = "/accounts/login/"
# بعد تسجيل الدخول يروح مباشرة للوحة السكرتير (أسهل للعرض)
LOGIN_REDIRECT_URL = "/appointments/secretary/"
LOGOUT_REDIRECT_URL = "/accounts/login/"

# ---------------------------
# Messages (Bootstrap)
# ---------------------------
MESSAGE_TAGS = {
    messages.DEBUG: "secondary",
    messages.INFO: "info",
    messages.SUCCESS: "success",
    messages.WARNING: "warning",
    messages.ERROR: "danger",
}

# ---------------------------
# Primary Key
# ---------------------------
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# ---------------------------
# Email (Gmail SMTP + App Password)
# من .env:
# EMAIL_HOST_USER=your@gmail.com
# EMAIL_HOST_PASSWORD=app_password
# DEFAULT_FROM_EMAIL=your@gmail.com (اختياري)
# ---------------------------
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_HOST_USER = config("EMAIL_HOST_USER", default="")
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD", default="")
DEFAULT_FROM_EMAIL = config("DEFAULT_FROM_EMAIL", default=EMAIL_HOST_USER)
ADMIN_EMAIL = "hawra92925@gmail.com"

# أثناء التطوير لا ترسل إيميلات حقيقية
if DEBUG:
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

# ---------------------------
# Twilio (اختياري)
# ---------------------------
TWILIO_ACCOUNT_SID = config("TWILIO_ACCOUNT_SID", default="")
TWILIO_AUTH_TOKEN = config("TWILIO_AUTH_TOKEN", default="")
TWILIO_PHONE_NUMBER = config("TWILIO_PHONE_NUMBER", default="+10000000000")

# ---------------------------
# Jazzmin
# ---------------------------
JAZZMIN_SETTINGS = {
    "site_title": "Clinic Admin",
    "site_header": "Clinic Management System",
    "site_brand": "ClinicHub",
    "welcome_sign": "Welcome to the Clinic Admin Dashboard",
    "copyright": "ClinicHub © 2025",

    "search_model": ["patient.Patient", "doctor.Doctor"],

    "topmenu_links": [
        {"name": "Home", "url": "admin:index"},
        {"app": "patient"},
        {"app": "doctor"},
        {"app": "appointments"},
        {"app": "prescription"},
        # {"app": "medical_archive"},
    ],

    "show_sidebar": True,
    "navigation_expanded": True,

    "icons": {
        "accounts.User": "fas fa-user",                # موديل مستخدم مخصص
        "auth.Group": "fas fa-users",
        "patient.Patient": "fas fa-user-injured",
        "doctor.Doctor": "fas fa-user-md",
        "appointments.Appointment": "fas fa-calendar-check",
        "prescription.Prescription": "fas fa-file-medical",
    },

    "default_icon_parents": "fas fa-clinic-medical",
    "default_icon_children": "fas fa-circle",
    "related_modal_active": True,
}

JAZZMIN_UI_TWEAKS = {
    "theme": "materia",
    "accent": "accent-primary",
    "navbar": "navbar-white navbar-light",
    "sidebar": "sidebar-dark-primary",
    "actions_sticky_top": True,
    "button_classes": {
        "primary": "btn-outline-primary",
        "secondary": "btn-outline-secondary",
        "info": "btn-outline-info",
        "warning": "btn-outline-warning",
        "danger": "btn-outline-danger",
        "success": "btn-outline-success",
    },
    "rounded_corners": True,
    "hover_effects": True,
    "dark_mode_theme": None,
}

# ---------------------------
# Project-specific defaults
# ---------------------------
# مدة الموعد الافتراضية (تُستخدم في واجهة الطابور)
APPOINTMENT_DURATION_MINUTES = int(config("APPOINTMENT_DURATION_MINUTES", default="15"))

# ---------------------------
# Security (Production)
# تُفعّل تلقائياً عندما DEBUG=False
# ---------------------------
def _build_csrf_trusted_from_hosts(hosts):
    """حوِّل ALLOWED_HOSTS إلى CSRF_TRUSTED_ORIGINS بصيغة https://host"""
    origins = []
    for h in hosts:
        h = h.strip()
        if not h:
            continue
        # محلياً قد تحتاج http أيضاً
        if h in ("127.0.0.1", "localhost"):
            origins.append(f"http://{h}")
            origins.append(f"https://{h}")
        else:
            origins.append(f"https://{h}")
    return origins

if not DEBUG:
    # إذا كنتِ خلف بروكسي (مثل Render) ليشتغل request.is_secure()
    SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

    # CSRF trusted
    CSRF_TRUSTED_ORIGINS = _build_csrf_trusted_from_hosts(ALLOWED_HOSTS)

    # HTTPS / Cookies / HSTS
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True

    SECURE_HSTS_SECONDS = 60 * 60 * 24 * 30  # 30 يوم كبداية
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True

    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_REFERRER_POLICY = "strict-origin-when-cross-origin"
    X_FRAME_OPTIONS = "DENY"

# ---------------------------
# Optional: Logging مبسّط (محسّن ويخفّض ضوضاء autoreload)
# ---------------------------
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {"class": "logging.StreamHandler"},
    },
    "loggers": {
        # أبقي django على INFO لتقليل ضوضاء التطوير
        "django": {"handlers": ["console"], "level": "INFO"},
        # أسكت رسائل StatReloader مثل "first seen with mtime ..."
        "django.utils.autoreload": {
            "handlers": ["console"],
            "level": "WARNING",
            "propagate": False,
        },
    },
    # مستوى root (لوجرز التطبيق) ممكن يبقى أعلى أثناء التطوير
    "root": {"handlers": ["console"], "level": "DEBUG" if DEBUG else "INFO"},
}
