# Generated by Django 5.2.4 on 2025-10-22 14:34

import django.core.validators
import django.db.models.deletion
import doctor.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, help_text='If empty, it will be filled from user.get_full_name() or username.', max_length=255, verbose_name='Full Name')),
                ('specialty', models.CharField(default='General', help_text='Doctor’s area of expertise.', max_length=100, verbose_name='Specialty')),
                ('phone', models.CharField(blank=True, help_text='E.164‑like: optional +, 7–15 digits.', max_length=20, null=True, validators=[doctor.models.validate_phone], verbose_name='Phone Number')),
                ('clinic_address', models.TextField(blank=True, verbose_name='Clinic Address')),
                ('photo', models.ImageField(blank=True, help_text='JPEG, PNG, or GIF; max\u202f2\u202fMB.', null=True, upload_to=doctor.models._upload_path, validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])], verbose_name='Profile Photo')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, verbose_name='Gender')),
                ('short_bio', models.CharField(blank=True, help_text='Brief summary shown on profile card.', max_length=255, verbose_name='Short Biography')),
                ('available', models.BooleanField(default=True, help_text='Shows whether this doctor can be booked.', verbose_name='Available for Booking')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, help_text='Average patient rating (0–5).', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('consultation_fee', models.PositiveIntegerField(blank=True, help_text='Set to 0 for free consultations.', null=True, verbose_name='Consultation Fee (IQD)')),
                ('experience_years', models.PositiveSmallIntegerField(blank=True, help_text='Number of years in practice.', null=True, validators=[django.core.validators.MaxValueValidator(80)], verbose_name='Years of Experience')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL, verbose_name='User Account')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'ordering': ['full_name'],
                'indexes': [models.Index(fields=['specialty'], name='doctor_doct_special_b9e018_idx'), models.Index(fields=['available', 'specialty'], name='doctor_doct_availab_418c82_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('rating__gte', 0), ('rating__lte', 5)), name='doctor_rating_between_0_and_5'), models.UniqueConstraint(condition=models.Q(('phone__gt', '')), fields=('phone',), name='unique_doctor_phone_nonempty')],
            },
        ),
    ]
